<?php

namespace App\Providers;

use Illuminate\Database\Events\MigrationsEnded;
use Illuminate\Database\Events\MigrationsStarted;
use Illuminate\Database\Events\QueryExecuted;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\ServiceProvider;
use Lunia\Auditoria\Services\Auditoria\CrearRegistroAuditoria;
use Lunia\Auditoria\Services\Auditoria\CrearRegistroAuditoriaRequest;
use Tymon\JWTAuth\Facades\JWTAuth;

class AuditoriaServiceProvider extends ServiceProvider
{

    /**
     * Register the application services.
     */
    public function register()
    {

        Event::listen(MigrationsStarted::class, function($event) {
            config()->set('auditoria.enable_audit',false);
        });

        Event::listen(MigrationsEnded::class, function($event) {
            config()->set('auditoria.enable_audit',true);
        });

        DB::listen(function (QueryExecuted $query) {

            if(config('auditoria.enable_audit') === false){
                return;
            }
            try{
                $token = JWTAuth::getToken();
                $apy = JWTAuth::getPayload($token)->toArray();
                $userId = $apy['sub'];
            }catch (\Throwable $throwable) {
                $userId = null;
            }

            app()->make(CrearRegistroAuditoria::class)->handle(
                new CrearRegistroAuditoriaRequest(
                    $query->sql,
                    $userId,
                    request()->url(),
                    $query->bindings,
                    config('auditoria.excluded_tables')
                ));
        });

    }
}
